<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!-- Simulation definition -->
<simulation world-size="220um 200um" dt="1s" background="white" length-coefficient="1e-1">

    <parameter name="objcount" value="10000" />
    <parameter name="moi" value="0.998" />

	<plugin name="python" />
    <plugin name="cell" />
    <plugin name="object-generator" />
    <plugin name="streamlines" />
    <plugin name="infection" />
     <!--
        Plugin loads SVG file and create obstacles from it.
        Path is taken as relative from simulation directory.
    -->
    <plugin name="obstacles-svg" filename="reactor.svg" color="black" />
    
    
    <!-- Define visualization layers -->
    <visualization enabled="true">
        <layer name="velocity" key="V" />
        <layer name="density" key="B" />
        <layer name="physics" key="D" />
        <layer name="fluid" key="N" />
    </visualization>

    <!-- Define types that will be used in simulation -->
        <type name="Ecoli" type="cell.Ecoli" 
        volume="1.5um3"
        volume-max="3um3" growth-rate="0.09um3/s" growth-penalty-rate="0.03um3/s" 
        volume-bud-create="2.1um3" volume-bud-release="2.5um3">
        </type>
        
        <type name="M13" type="cell.Phage" 
		volume="0.5um3"
        good-fitness-proportion="0.01" 
        fitness-solution="20"
        fitness-solution-delta="3"
        fitness-distance="10" 
        fitness-distance-delta="5"
        search-time="30s">
        <mutation time="0s" probability="0.2" amplitude="5"/>
        <mutation time="300s" probability="0.5" amplitude="2"/>
        <mutation time="600s" probability="0.7" amplitude="1"/>
        </type> 
      
 	<!-- Chamber initialization - Generate simulation objects at random places -->
    <init language="python">
<![CDATA[
import core
import random

def call(simulation):
    objCount = int(simulation.getParameter("objcount"))
    moi = float(simulation.getParameter("moi"))
    ecoliCount = int(objCount * (1 - moi))
    m13Count = int(objCount * moi)

    y_span = 75
    x_span = 110
    x_ranges = [-x_span+20, x_span-20]
    y_ranges = [-y_span, y_span]

    # Generate cell of E. Coli type
    for i in xrange(1, ecoliCount):
        ecoli = simulation.createObject("Ecoli")
        x = random.uniform(x_ranges[0], x_ranges[1])
        y = random.uniform(y_ranges[0], y_ranges[1])
        ecoli.position = core.VectorPosition(x, y)

    # Generate cell of Phage type
    for i in xrange(1, m13Count):
        m13 = simulation.createObject("M13")
        x = random.uniform(x_ranges[0], x_ranges[1])
        y = random.uniform(y_ranges[0], y_ranges[1])
        m13.position = core.VectorPosition(x, y)
]]>
    </init>
     
    <!-- Constant inflow of fresh Ecoli -->
      <module name="object-generator">
      	<object class="Ecoli" velocity="0um/s 500um/s" rate="0.01/s"
      	position-min="-5 30" position-max="10 30"/>
      </module> 

   
      <!--
      <module name="object-generator">
      	<object class="M13" velocity="0um/s 0um/s" rate="5/s"
      	position-min="-100 -5" position-max="-100 5"/>
      </module>
       -->
    
    <!-- Selective inflow -->
    <module name="streamlines" char-length="25" init-iterations="1000" number-nodes="25" 
    dynamic="false" inlet-velocity="1.3um/s" layout="inlet outlet inlet outlet"
    tau="1.3"
    layer-magnitude="velocity" layer-density="density" layer-dynamics="fluid"/>
    
    
    <!-- Parameters that handle infection behavior -->
    
    <module name="infection" info-file-path="/Users/Gus/Desktop/infection-output/simTest.csv" print-interval="1" tracked-pathogen="M13">
	<bond pathogen="M13" 
			host="Ecoli" 
			probability-of-infection="0.2" 
			max-offspring="7" 
			eclipse-time="0s"
			ppr="1s"/>
			</module>
</simulation>