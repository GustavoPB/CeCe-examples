<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<!-- Simulation definition -->
<simulation world-size="200um 150um" dt="1ms" background="white" length-coefficient="1e-1">

    <parameter name="objcount" value="3000" />
    <parameter name="moi" value="0.99" />

	<plugin name="python" />
    <plugin name="cell" />
    <plugin name="object-generator" />
    <plugin name="streamlines" />
    <plugin name="bioreactor" pipe-top="20" pipe-radius="5" size="80" visible="true" isSymmetric="false"/>
    <plugin name="infection" />
    

    <!-- Define types that will be used in simulation -->
        <type name="Ecoli" type="cell.Ecoli" 
        volume="1um3"
        volume-max="3um3" growth-rate="10/s" volume-bud-create="2.1um3" volume-bud-release="2.5um3">
        </type>
        
        <type name="M13" type="cell.Phage" 
		volume="0.5um3"
        good-fitness-proportion="1" 
        fitness-solution="20"
        fitness-solution-delta="3"
        fitness-distance="15" 
        fitness-distance-delta="5"
        mutation-probability="0.2"
        mutation-amplitude="2"
        search-time="30ms">
        </type> 
      
 	<!-- Chamber initialization - Generate simulation objects at random places -->
    <init language="python">
<![CDATA[
import core
import random

def __call__(simulation):
    objCount = int(simulation.getParameter("objcount"))
    moi = float(simulation.getParameter("moi"))
    ecoliCount = int(objCount * (1 - moi))
    m13Count = int(objCount * moi)
    
    bioreactorSize = float(simulation.getParameter("bioreactor-size"))
    bioreactorPipeRadius = float(simulation.getParameter("bioreactor-pipe-radius"))
    bioreactorPipeTop = float(simulation.getParameter("bioreactor-pipe-top"))
    yWorldSizeHalf = simulation.worldSize.y/2
    
    x_span = bioreactorSize/2 - 1
    y_pos_span = yWorldSizeHalf - bioreactorPipeTop - 1
    y_neg_span = y_pos_span - bioreactorSize - 2 * bioreactorPipeRadius + 2
    x_ranges = [-x_span, x_span]
    y_ranges = [y_neg_span, y_pos_span]

    # Generate cell of E. Coli type
    for i in xrange(1, ecoliCount):
        ecoli = simulation.createObject("Ecoli")
        x = random.uniform(x_ranges[0], x_ranges[1])
        y = random.uniform(y_ranges[0], y_ranges[1])
        ecoli.position = core.VectorPosition(x, y)

    # Generate cell of Phage type
    for i in xrange(1, m13Count):
        m13 = simulation.createObject("M13")
        x = random.uniform(x_ranges[0], x_ranges[1])
        y = random.uniform(y_ranges[0], y_ranges[1])
        m13.position = core.VectorPosition(x, y)
]]>
    </init>
    
    <!-- Constant inflow of fresh Ecoli -->
      <module name="object-generator">
      	<object class="Ecoli" velocity="500um/s 0" position-min="-95 45" position-max="-95 55" rate="100/s"/>
      </module> 
    
    <!-- Selective inflow -->
    <module name="streamlines" char-length="20" number-nodes="10" inlet-velocity="1000um/s" layout="barrier outlet barrier inlet"/>
    
    <!-- Parameters that handle infection behavior -->
    <module name="infection" info-file-path="/Users/Gus/Desktop/infectiontestfile.txt" tracked-pathogen="M13">
	<bond pathogen="M13" 
			host="Ecoli" 
			probability-of-infection="0.5" 
			max-offspring="3" 
			eclipse-time="30ms"
			ppr="20ms"/>
			</module>
</simulation>